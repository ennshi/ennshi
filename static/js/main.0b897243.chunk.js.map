{"version":3,"sources":["components/MovieItem.js","components/MovieTabs.js","components/MoviePages.js","components/App.js","utils/api.js","serviceWorker.js","index.js"],"names":["MovieItem","state","willWatch","this","props","movie","removeMovie","addToWillWatch","removeWillWatch","className","src","backdrop_path","poster_path","alt","title","vote_average","type","onClick","setState","bind","React","Component","classNames","require","MovieTabs","sort_by","updateSortBy","handleClick","value","getClassLink","MoviePages","cur_page","setPage","changePage","total_pages","App","getMovies","fetch","current_page","then","response","json","data","movies","results","catch","e","Error","moviesWillWatch","updatedMovies","filter","item","id","updatedWillWatch","length","page","symbol","map","key","prevProps","prevState","snapshot","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","console","message"],"mappings":"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","file":"static/js/main.0b897243.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nclass MovieItem extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            willWatch: false\r\n        };\r\n    }\r\n    render() {\r\n        const {movie, removeMovie, addToWillWatch, removeWillWatch} = this.props;\r\n        return(\r\n            <div className=\"card\">\r\n                <img\r\n                    className=\"card-img-top\"\r\n                    src={`https://image.tmdb.org/t/p/w500${movie.backdrop_path ||\r\n                    movie.poster_path}`}\r\n                    alt={movie.title}\r\n                />\r\n                <div className=\"card-body\">\r\n                    <h6 className=\"card-title\">{movie.title}</h6>\r\n                    <div className=\"d-flex flex-row flex-wrap justify-content-center justify-content-md-between align-items-center\">\r\n                        <p className=\"mb-0\">Rating: {movie.vote_average}</p>\r\n                        {this.state.willWatch ? <button type=\"button\" className=\"btn btn-success\" onClick={() => {\r\n                                removeWillWatch(movie);\r\n                                this.setState({willWatch: false});\r\n                            }}>\r\n                               Remove Will Watch\r\n                            </button> :\r\n                            <button type=\"button\" className=\"btn btn-secondary\" onClick={() => {\r\n                                addToWillWatch(movie);\r\n                                this.setState({willWatch: true});\r\n                            }}>\r\n                                Will Watch\r\n                            </button>\r\n                        }\r\n                        <button type=\"button\" className=\"btn btn-danger\" onClick={removeMovie.bind(null, movie)}>\r\n                            Delete\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MovieItem;\r\n","import React from \"react\";\r\nvar classNames = require('classnames');\r\n\r\nexport class MovieTabs extends React.Component{\r\n    render() {\r\n        const {sort_by, updateSortBy} = this.props;\r\n        const handleClick = (value) => () => updateSortBy(value);\r\n        const getClassLink = (value) => classNames('nav-link', {'active': sort_by === value});\r\n        return (\r\n            <div>\r\n                <ul className=\"tabs nav nav-pills\">\r\n                    <li className=\"nav-item\">\r\n                        <div className={getClassLink('popularity.desc')}\r\n                            onClick={handleClick('popularity.desc')}\r\n                        >\r\n                            Popularity desc\r\n                        </div>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <div className={getClassLink('revenue.desc')}\r\n                             onClick={handleClick('revenue.desc')}\r\n                        >\r\n                            Revenue desc\r\n                        </div>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <div className={getClassLink('vote_average.desc')}\r\n                             onClick={handleClick('vote_average.desc')}\r\n                        >\r\n                            Vote average desc\r\n                        </div>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\n\r\nexport class MoviePages extends React.Component {\r\n    render() {\r\n        const {cur_page, setPage, changePage, total_pages} = this.props;\r\n        return(\r\n            <div className='col-12 d-flex justify-content-center mb-4'>\r\n                <ul className=\"tabs nav nav-pills\">\r\n                    <li className='page-item'>\r\n                        <div className='page-link' onClick={setPage.bind(null, 1)}>\r\n                            1\r\n                        </div>\r\n                    </li>\r\n                    <li className='page-item'>\r\n                        <div className='page-link' onClick={changePage.bind(null, '-')}>\r\n                            &lt;&lt;\r\n                        </div>\r\n                    </li>\r\n                    <li className='page-item'>\r\n                        <div className='page-link noactive'>\r\n                            {cur_page}\r\n                        </div>\r\n                    </li>\r\n                    <li className='page-item'>\r\n                        <div className='page-link' onClick={changePage.bind(null, '+')}>\r\n                            &gt;&gt;\r\n                        </div>\r\n                    </li>\r\n                    <li className='page-item'>\r\n                        <div className='page-link' onClick={setPage.bind(null, 500)}>\r\n                            {total_pages}\r\n                        </div>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\nimport MovieItem from \"./MovieItem\";\nimport {API_URL, API_KEY_3} from \"../utils/api\";\nimport {MovieTabs} from \"./MovieTabs\";\nimport {MoviePages} from \"./MoviePages\";\n\nclass App extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            total_pages: 500,\n            current_page: 1,\n            movies: [],\n            moviesWillWatch: [],\n            sort_by: 'popularity.desc'\n        };\n        //this.removeMovie = this.removeMovie.bind(this);\n    }\n    render() {\n        return (\n            <div className='container'>\n                <div className='row'>\n                    <div className='col-12 col-md-9'>\n                        <div className='row mb-4'>\n                            <div className='col-12'>\n                                <MovieTabs sort_by={this.state.sort_by} updateSortBy={this.updateSortBy}/>\n                            </div>\n                        </div>\n                        <div className='row'>\n                            {this.state.movies.map(movie =>\n                                <div className='col-6 mb-4' key={movie.id}>\n                                    <MovieItem movie={movie}\n                                               removeMovie={this.removeMovie}\n                                               addToWillWatch={this.addToWillWatch}\n                                               removeWillWatch={this.removeWillWatch}\n                                    />\n                                </div>)}\n                        </div>\n                    </div>\n                    <div>\n                        <p>Will Watch: {this.state.moviesWillWatch.length}</p>\n                    </div>\n                </div>\n                <div className='row'>\n                    <MoviePages changePage={this.changePage}\n                                setPage={this.setPage}\n                                cur_page={this.state.current_page}\n                                total_pages={this.state.total_pages}\n                    />\n                </div>\n            </div>\n        );\n    }\n    componentDidMount() {\n        this.getMovies();\n    }\n    // componentDidUpdate(prevState) {\n    //     this.getMovies();\n    // }\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        // to be able to see the effect of this.removeMovie\n        if(prevState.current_page !== this.state.current_page) {\n            this.getMovies();\n        }\n    }\n\n    getMovies = () => {\n        fetch(`${API_URL}/discover/movie?api_key=${API_KEY_3}&sort_by=${this.state.sort_by}&page=${this.state.current_page}`)\n            .then((response) => response.json())\n            .then((data) => {\n                this.setState({\n                    movies: data.results\n                });\n            })\n            .catch((e) => {\n                throw new Error(e);\n            });\n    };\n    removeMovie = (movie) => {\n        const {movies, moviesWillWatch} = this.state;\n        const updatedMovies = movies.filter( item => item.id !== movie.id);\n        const updatedWillWatch = moviesWillWatch.length ? moviesWillWatch.filter( item => item.id !== movie.id) : [];\n        this.setState({\n            movies: updatedMovies,\n            moviesWillWatch: updatedWillWatch\n        });\n    };\n    addToWillWatch = (movie) => {\n        const updatedWillWatch = [...this.state.moviesWillWatch, movie];\n        this.setState({\n            moviesWillWatch: updatedWillWatch\n        });\n    };\n    removeWillWatch = (movie) => {\n        const updatedWillWatch = [...this.state.moviesWillWatch].filter(item => item.id !== movie.id);\n        this.setState({\n            moviesWillWatch: updatedWillWatch\n        });\n    };\n    updateSortBy = (value) => {\n        this.setPage(1);\n        this.setState({\n            sort_by: value\n        });\n    };\n\n    setPage = (page) => {\n        if(this.state.current_page !== page) {\n            this.setState({\n                current_page: page\n            });\n        }\n    };\n\n    changePage = (symbol) => {\n        const {current_page, total_pages} = this.state;\n        if(symbol === '+') {\n            if(current_page < total_pages) {\n                this.setPage(current_page + 1);\n            }\n        } else {\n            if(current_page > 0) {\n                this.setPage(current_page-1);\n            }\n        }\n    };\n}\n\n\nexport default App;\n","export const API_URL = \"https://api.themoviedb.org/3\";\r\n\r\nexport const API_KEY_3 = \"3f4ca4f3a9750da53450646ced312397\";\r\n\r\nexport const API_KEY_4 =\r\n    \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIzZjRjYTRmM2E5NzUwZGE1MzQ1MDY0NmNlZDMxMjM5NyIsInN1YiI6IjVhYzlmNWRkOTI1MTQxNjJhZTA1Njk0NiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.Fc4f9DVB6pFWh6hIjYe0NCC4pImdmNzDIfi_3Nb3tC4\";\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}